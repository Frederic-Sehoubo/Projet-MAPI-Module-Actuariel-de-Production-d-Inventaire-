/*******************************************************************//* AUTEUR : F.SEHOUBO					           *//* PROJET : MAPI-IND                                               *//******************** DESCRIPTION **********************************//* Calcul des variables pour le calcul des f : Table SF            *//* Parametres : 						   *//* Sorties :                                                 	   *//******************** HISTORIQUE ***********************************//* VERSION | DATE MODIF 	| COMMENTAIRES                     *//**********|****************|***************************************//* V0002   |  26/03/2020    | précision du périmètre par DTG       *//* V0001   |  25/02/2020    | Creation                             *//**********|****************|***************************************/%macro calculf_s;
         /***********************************************************************************************************/	 /* définition du périmètre des données techniques le calcul est fait sur le périmètre de sfc et sfr cumulé */
         /***********************************************************************************************************/	proc sql;	create table prim_data_tech_1		as select 				cd_systeme,	cd_prd_tech,cd_tarif,cd_reseau,				papiv,portefeuille,CD_PRD_COM,cd_isin		from src_sfc(where=(UPCASE(TYPE_SUPPORT) in ("E","P", "X")))		Where UPCASE(CD_Prd_Tech) not in ( Select UPCASE(CD_Prd_Tech) From WORK.ref_prd_euroxance);		create table prim_data_tech_2		as select 				cd_systeme,	cd_prd_tech,cd_tarif,cd_reseau,				papiv,portefeuille,CD_PRD_COM,cd_isin		from src_sfr(where=(UPCASE(TYPE_SUPPORT) in ("E","P", "X")))		Where UPCASE(CD_Prd_Tech) not in ( Select UPCASE(CD_Prd_Tech) From WORK.ref_prd_euroxance);	quit; 	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	/* Sommation des valeurs pour la variable   Contrat */	Proc Sql noprint;		Create table SF_interm_01 as			Select a.cd_systeme,				a.cd_tarif,				a.cd_reseau,				a.cd_prd_tech,				a.papiv,				a.portefeuille,				a.CD_PRD_COM,				a.cd_isin,				a.orgdo,				a.nature_orgdo,				a.type_support,				a.cd_evt_majeur,				a.cd_evt_act,				a.type_montant,				a.Flag_pr_Epargne,				a.Flag_Rente_Indiv,				sum(a.Montant_signe) as Montant_signe			From SF_interm_00 a			Where a.Flag_pr_Epargne eq 1 or Flag_Rente_Indiv eq 1			Group by a.cd_systeme,					a.cd_tarif,					a.cd_reseau,					a.cd_prd_tech,					a.papiv,					a.portefeuille,					a.CD_PRD_COM,					a.cd_isin,					a.orgdo,					a.nature_orgdo,					a.type_support,					a.cd_evt_majeur,					a.cd_evt_act,					a.type_montant,					a.Flag_pr_Epargne,					a.Flag_Rente_Indiv;	Quit;	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	/* Ajout de la variable indicatrice correspondant chaque ORGDO */	Proc Sql noprint;		Create table SF_interm_02 as 			Select  a.* 				,coalesce(b.Indic_OS_C1,0) as Indic_OS_C1			From SF_interm_01(where=(UPCASE(TYPE_SUPPORT) in ("E","P"))) a /* support en Euro */				Left join WORK.REF_ORGDO_SYS1  b on (a.ORGDO=b.ORGDO and a.CD_SYSTEME=b.CD_SYSTEME);	Quit;	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	Proc Sql noprint;			Create Table EVT_MAJEUR_1 as 			Select a.*			from WORK.REF_Evt_Act(Where=(Type_Assiette ne " " and CD_Evt_Act ne "")) a 			;	Quit;


	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	Proc Sql noprint;			Create Table EVT_MAJEUR_2 as 			Select 			a.TYPE_ASSIETTE			,a.CD_EVT_MAJEUR			,b.CD_EVT_ACT			,a.LIB_EVT_MAJEUR			,a.LIB_EVT_ACT			from WORK.REF_Evt_Act(Where=(Type_Assiette ne " " and CD_Evt_Act eq "")) a			left join liste_evt_act_sf b  on a.CD_EVT_MAJEUR=b.CD_EVT_MAJEUR 			where b.CD_EVT_ACT not in select distinct CD_EVT_ACT from EVT_MAJEUR_1			;	Quit;

	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	Proc Sql noprint;		Create Table SF_interm_03 as 			Select a.*				,b.Type_Assiette						,b.Lib_Evt_Act			From SF_interm_02 a				Left join WORK.REF_Evt_Act_ok(Where=(Type_Assiette ne " ")) b 					on (compress(a.CD_EVT_MAJEUR) = compress(b.CD_Evt_Majeur) 					and  compress(a.CD_Evt_Act)    = compress(b.CD_Evt_Act) );	Quit;
	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	/*****************************************************************/	/* Créations des nouvelles variables necéssaires au calcul des f */	/*****************************************************************/
	Proc Sql noprint;		Create Table sf_calcul_f0 as 		Select a.*				/* DÈfinition des Pm DÈbut */		,ifn( (Upcase(a.Type_Assiette) eq "PM_DEB" and Upcase(a.TYPE_MONTANT) eq "P"), a.Montant_Signe, 0)   as PM_Deb		,ifn( (Upcase(a.Type_Assiette) eq "PM_DEB"  and Upcase(a.TYPE_MONTANT) eq "P" and Upcase(Compress(a.ORGDO,'d')) eq "S"), a.Montant_Signe, 0) as PM_Deb_S		/* Définition du RT */		,ifn( (Upcase(a.CD_EVT_MAJEUR) eq "992" and Upcase(a.TYPE_MONTANT) eq "P" and Upcase(Compress(a.ORGDO,'d')) eq "I"), a.Montant_SIGNE, 0 ) as RT_Gest		,ifn( (Upcase(a.CD_EVT_MAJEUR) eq "992" and Upcase(a.TYPE_MONTANT) eq "P" and Upcase(Compress(a.ORGDO,'d')) eq "J"), a.Montant_SIGNE, 0 ) as RT_Autres		From SF_interm_03 a;	Quit;	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;	/* Sommation des variables crÈÈes sur la maille 1 */	Proc Sql noprint;		Create Table SF_N as 			Select a.cd_systeme				,a.cd_prd_tech				,a.cd_tarif				,a.cd_reseau				,sum(a.PM_Deb) as PM_Deb_N				,sum(PM_Deb_S) as PM_Deb_S_N				,sum(RT_Gest)  as RT_Gest 				,sum(RT_Autres) as RT_Autres			From sf_calcul_f0 as a				Group by a.cd_systeme					,a.cd_prd_tech					,a.cd_tarif					,a.cd_reseau;	Quit;	/* Gestion des erreurs techniques */	%mis_mac_erreur_tech;	%if &cr_err_tech. gt 0 %then	%goto Err_sse0;%Err_sse0:%Mend calculf_s; 